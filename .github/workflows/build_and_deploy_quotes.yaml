name: Build and Deploy Quotes Application

on: workflow_dispatch

env:
  ECR_REGISTRY: 668558765449.dkr.ecr.us-west-2.amazonaws.com
  ECR_REPOSITORY: agent-demo-30bad72
  AWS_REGION: us-west-2
  AWS_PROFILE: agent-demo-deployment

jobs:
  # Build and push Docker images
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      image: ${{ steps.build.outputs.image }}
      image-tag: ${{ steps.meta.outputs.tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Generate image metadata
        id: meta
        run: |
          TAG=${GITHUB_SHA::8}
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TAG="pr-${{ github.event.number }}-${TAG}"
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "Generated tag: ${TAG}"

      - name: Setup AWS helpers
        run: |
          wget https://rolesanywhere.amazonaws.com/releases/1.5.0/X86_64/Linux/aws_signing_helper
          chmod +x aws_signing_helper
          wget https://amazon-ecr-credential-helper-releases.s3.us-east-2.amazonaws.com/0.10.1/linux-amd64/docker-credential-ecr-login
          mv docker-credential-ecr-login /usr/local/bin/
          chmod +x /usr/local/bin/docker-credential-ecr-login

      - name: Fetch Teleport binaries
        uses: teleport-actions/setup@v1
        with:
          version: 18.1.5

      - name: Authenticate with Teleport
        run: |
          tbot start --oneshot -c ./action_support/bot.yaml
          openssl x509 -text -in ./svid-out/svid.pem

      - name: Configure AWS credentials
        run: |
          mkdir -p /home/runner/.aws
          cp ./action_support/aws_config /home/runner/.aws/config
          cp ./action_support/docker_config.json /home/runner/.docker/config.json

      - name: Build and push image (multi-arch)
        id: build
        run: |
          IMAGE_URI="${ECR_REGISTRY}/${ECR_REPOSITORY}:quotes-${{ steps.meta.outputs.tag }}"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t $IMAGE_URI \
            --cache-from type=gha \
            --cache-to type=gha,mode=max \
            ./action_support/quotes
          echo "image=${IMAGE_URI}" >> $GITHUB_OUTPUT
          echo "Built multi-arch backend image: ${IMAGE_URI}"

  # Deploy using Helm (for Kubernetes deployments)
  deploy-k8s:
    name: Deploy Backend to Kubernetes
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.18.3'

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.32.2'

      - name: Fetch Teleport binaries
        uses: teleport-actions/setup@v1
        with:
          version: 18.1.5

      - name: Authenticate with Teleport
        run: |
          tbot start --oneshot -c ./action_support/bot.yaml

      - name: Deploy quotes application
        run: |
          helm upgrade --install quotes ./charts/quotes \
            --namespace agent-demo \
            --values ./charts/quotes/values.yaml \
            --set image.repository="${ECR_REGISTRY}/${ECR_REPOSITORY}" \
            --set image.tag="quotes-${{ needs.build.outputs.image-tag }}" \
            --kubeconfig /home/runner/work/agentic-identity-demo/agentic-identity-demo/k8s-out/kubeconfig.yaml
